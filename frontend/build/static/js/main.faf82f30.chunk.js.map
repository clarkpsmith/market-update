{"version":3,"sources":["common/UserContext.js","navbar/Navbar.js","home/Home.js","api/JoblyApi.js","helpers/addCommas.js","jobs/Job.js","common/SearchForm.js","jobs/Jobs.js","companies/Company.js","companies/Companies.js","companies/CompaniesJobs.js","helpers/Alert.js","auth/Login.js","auth/SignUp.js","auth/Profile.js","helpers/ProtectedRoute.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","React","createContext","NavBar","logOut","currentUser","useContext","Navbar","className","expand","exact","to","Nav","navbar","NavItem","onClick","username","Home","Card","CardBody","CardTitle","firstName","Button","color","size","BASE_URL","process","JoblyApi","endpoint","data","method","console","debug","url","headers","Authorization","token","params","axios","error","response","message","Array","isArray","handle","this","request","res","company","job","companyHandle","companies","searchVal","jobs","password","formData","user","id","getToken","getCurrentUserData","lastName","email","addCommas","numbers","numbersArray","toString","indexOf","slice","split","number","decimal","reversedArray","reverse","addedCommas","i","length","push","join","Job","useState","applied","setApplied","apply","handleClick","useEffect","applications","find","applicationId","salaryWithCommas","salary","title","companyName","equity","disabled","SearchForm","search","searchTerm","setFormData","handleSubmit","evt","a","preventDefault","onSubmit","type","name","placeholder","value","FormData","onChange","target","Jobs","setJobs","isLoading","setIsLoading","updateCurrentUser","searchJobByTitle","getAllJobs","jobsArray","map","uuid","Company","logoUrl","width","src","alt","description","Companies","setCompanies","searchCompanyByName","getAllCompanies","companiesArray","CompaniesJobs","companyData","setCompanyData","useParams","getCompaniesJobs","Alert","errorMessages","messages","err","role","Login","login","formErrors","setFormErrors","useHistory","handleChange","result","success","log","Form","FormGroup","htmlFor","required","SignUp","signUp","Profile","updateProfile","initialData","text-align","ProtectedRoute","Component","localStorage","getItem","pathname","App","setCurrentUser","currentToken","setCurrentToken","history","jwt","decode","res2","addTokenToLocalStorage","setItem","clearToken","clear","registerUser","Provider","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.faf82f30.chunk.js","sourcesContent":["import React from \"react\";\n\nconst UserContext = React.createContext();\n\nexport default UserContext;\n","import React, { useContext } from \"react\";\n\nimport { NavLink } from \"react-router-dom\";\nimport { Navbar, Nav, NavItem } from \"reactstrap\";\nimport UserContext from \"../common/UserContext\";\n\nfunction NavBar({ logOut }) {\n  const { currentUser } = useContext(UserContext);\n\n  return (\n    <div>\n      <Navbar className=\"navbar\" expand=\"md\">\n        <NavLink exact to=\"/\" className=\"navbar-brand\">\n          Jobly\n        </NavLink>\n\n        <Nav className=\"ml-auto\" navbar>\n          {currentUser ? (\n            <>\n              <NavItem>\n                <NavLink className=\"navlinks\" to=\"/companies\">\n                  Companies\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink className=\"navlinks\" to=\"/jobs\">\n                  Jobs\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink className=\"navlinks\" to=\"/profile\">\n                  Profile\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink className=\"navlinks-logout\" to=\"/\" onClick={logOut}>\n                  Log Out {currentUser.username}\n                </NavLink>\n              </NavItem>\n            </>\n          ) : (\n            <>\n              <NavItem>\n                <NavLink className=\"navlinks\" to=\"/login\">\n                  Login\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink className=\"navlinks\" to=\"/signup\">\n                  Sign Up\n                </NavLink>\n              </NavItem>\n            </>\n          )}\n        </Nav>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React, { useContext } from \"react\";\nimport { Card, CardBody, CardTitle, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport UserContext from \"../common/UserContext\";\nimport \"./Home.css\";\n\nconst Home = () => {\n  const { currentUser } = useContext(UserContext);\n  return (\n    <div className=\"background\">\n      <section className=\"offset-md-2 col-md-8 Home col-md-8 \">\n        <Card>\n          <CardBody className=\"text-center\">\n            <CardTitle>\n              <h2 className=\"font-weight-bold\"> Jobly</h2>\n            </CardTitle>\n            <p>All the jobs in one, convenient place</p>\n            {currentUser ? (\n              <h3>Welcome Back, {currentUser.firstName}</h3>\n            ) : (\n              <>\n                <Link to=\"/signup\">\n                  <Button className=\"Home-btn\" color=\"primary\" size=\"sm\">\n                    Sign Up\n                  </Button>\n                </Link>\n\n                <Link to=\"/login\">\n                  <Button className=\"Home-btn\" color=\"primary\" size=\"sm\">\n                    Login\n                  </Button>\n                </Link>\n              </>\n            )}\n          </CardBody>\n        </Card>\n      </section>\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass JoblyApi {\n  // the token for interactive with the API will be stored here.\n  static token;\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method);\n\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${JoblyApi.token}` };\n    const params = method === \"get\" ? data : {};\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  /** Get details on a company by handle. */\n\n  static async getCompany(handle) {\n    let res = await this.request(`companies/${handle}`);\n    return res.company;\n  }\n\n  static async getJob(handle) {\n    let res = await this.request(`jobs/${handle}`);\n    return res.job;\n  }\n\n  static async getCompaniesJobs(companyHandle) {\n    let res = await this.request(`companies/${companyHandle}`);\n    return res;\n  }\n  static async getAllCompanies() {\n    let res = await this.request(\"companies\");\n\n    return res.companies;\n  }\n  static async searchCompanyByName(searchVal) {\n    let res = await this.request(`companies?name=${searchVal}`);\n    return res.companies;\n  }\n\n  static async getAllJobs() {\n    let res = await this.request(\"jobs\");\n    return res.jobs;\n  }\n\n  static async searchJobByTitle(searchVal) {\n    let res = await this.request(`jobs?title=${searchVal}`);\n    return res.jobs;\n  }\n\n  static async getToken(username, password) {\n    let res = await this.request(`auth/token`, { username, password }, \"post\");\n\n    JoblyApi.token = res.token;\n\n    return res.token;\n  }\n\n  static async registerUser(formData) {\n    let res = await this.request(`auth/register`, { ...formData }, \"post\");\n    JoblyApi.token = res.token;\n    return res.token;\n  }\n\n  static async getCurrentUserData(username) {\n    let res = await this.request(`users/${username}`);\n    return res.user;\n  }\n  static async clearToken() {\n    JoblyApi.token = \"\";\n  }\n\n  static async apply(username, id) {\n    const res = await this.request(`users/${username}/jobs/${id}`, {}, \"post\");\n    return res;\n  }\n\n  static async updateProfile(formData) {\n    // check if pasword matches, if not throws error\n    const authenticate = await this.getToken(\n      formData.username,\n      formData.password\n    );\n\n    const userData = await this.getCurrentUserData(formData.username);\n\n    const res = await this.request(\n      `users/${formData.username}`,\n      {\n        password: formData.password,\n        firstName: formData.firstName,\n        lastName: formData.lastName,\n        email: formData.email,\n      },\n      \"patch\"\n    );\n    return res;\n  }\n}\n\nexport default JoblyApi;\n","function addCommas(numbers) {\n  if (!numbers) return;\n  const numbersArray = numbers.toString();\n  if (numbersArray.indexOf(\"-\") !== -1) {\n    numbersArray.slice(1);\n  }\n\n  const [number, decimal] = numbersArray.split(\".\");\n\n  const reversedArray = number.split(\"\").reverse();\n  const addedCommas = [];\n\n  for (let i = 0; i < reversedArray.length; i++) {\n    if (i % 3 == 0 && i !== 0) {\n      addedCommas.push(\",\");\n    }\n    addedCommas.push(reversedArray[i]);\n  }\n\n  addedCommas.reverse();\n\n  if (decimal) {\n    addedCommas.push(\".\");\n    addedCommas.push(decimal);\n  }\n  return addedCommas.join(\"\");\n}\n\nexport default addCommas;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Button } from \"reactstrap\";\nimport addCommas from \"../helpers/addCommas\";\n\nimport UserContext from \"../common/UserContext\";\n\nimport \"./Job.css\";\n\nconst Job = ({ job }) => {\n  const [applied, setApplied] = useState(\"Apply\");\n  const { apply, currentUser } = useContext(UserContext);\n\n  useEffect(() => {\n    if (currentUser) {\n      const applied = currentUser.applications.find(\n        (applicationId) => applicationId === job.id\n      );\n      setApplied(applied);\n    }\n  }, []);\n\n  function handleClick() {\n    apply(currentUser.username, job.id);\n    setApplied(job.id);\n  }\n\n  const salaryWithCommas = addCommas(job.salary);\n\n  return (\n    <div className=\"Job\">\n      <h6 className=\"font-weight-bold\"> {job.title}</h6>\n\n      <h6>{job.companyName}</h6>\n      <br />\n      <p>Salary: {salaryWithCommas ? `$${salaryWithCommas}` : \"None\"}</p>\n      <p>\n        Equity: {job.equity == 0 || !job.equity ? \"None\" : `${job.equity} %`}\n        <span>\n          {applied ? (\n            <Button\n              onClick={handleClick}\n              size=\"sm\"\n              className=\"Job-btn\"\n              color=\"danger\"\n              disabled\n            >\n              Applied\n            </Button>\n          ) : (\n            <Button\n              onClick={handleClick}\n              size=\"sm\"\n              className=\"Job-btn\"\n              color=\"danger\"\n            >\n              Apply\n            </Button>\n          )}\n        </span>\n      </p>\n    </div>\n  );\n};\n\nexport default Job;\n","import React, { useState } from \"react\";\nimport \"./SearchForm.css\";\n\nimport { Button } from \"reactstrap\";\n\nconst SearchForm = ({ search }) => {\n  const initialData = {\n    searchTerm: \"\",\n  };\n  const [formData, setFormData] = useState(initialData);\n\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData((data) => ({\n      [name]: value,\n    }));\n  }\n\n  const handleSubmit = async (evt) => {\n    evt.preventDefault();\n\n    await search(formData.searchTerm);\n  };\n\n  return (\n    <div className=\"SearchForm m-4\">\n      <form className=\"SearchForm-form form-inline \" onSubmit={handleSubmit}>\n        <input\n          className=\"SearchForm-input flex-grow-1\"\n          type=\"text\"\n          name=\"searchTerm\"\n          id=\"searchTerm\"\n          placeholder=\"Enter search term...\"\n          value={FormData.searchTerm}\n          onChange={handleChange}\n        />\n        <Button size=\"sm\" color=\"primary\" className=\"SearchForm-btn\">\n          Submit\n        </Button>\n      </form>\n    </div>\n  );\n};\nexport default SearchForm;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport Job from \"./Job\";\nimport SearchForm from \"../common/SearchForm\";\nimport JoblyApi from \"../api/JoblyApi\";\nimport { v4 as uuid } from \"uuid\";\nimport UserContext from \"../common/UserContext\";\n\nimport \"./Jobs.css\";\n\nconst Jobs = () => {\n  const [jobs, setJobs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const { currentUser, updateCurrentUser } = useContext(UserContext);\n\n  useEffect(async () => {\n    const res = await JoblyApi.getAllJobs();\n    setJobs(res);\n    updateCurrentUser();\n    setIsLoading(false);\n  }, []);\n\n  async function searchJob(value) {\n    const res = await JoblyApi.searchJobByTitle(value);\n    setJobs((jobs) => res);\n  }\n\n  const jobsArray = jobs.map((job) => (\n    <div key={uuid()}>\n      <Job job={job} currentUser={currentUser} />\n    </div>\n  ));\n\n  if (isLoading) {\n    return <div>Loading ...</div>;\n  }\n\n  return (\n    <div className=\"Jobs background\">\n      <div className=\"Jobs-group col-md-8 offset-md-2\">\n        <SearchForm search={searchJob} />\n        <div className=\"Jobs-listings m-4\">\n          {jobs.length === 0 ? \"Sorry, no results were found!\" : jobsArray}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Jobs;\n","import React from \"react\";\n\nimport \"./Company.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Company = ({ company }) => {\n  return (\n    <>\n      <Link to={`/companies/${company.handle}`}>\n        <section className=\"Company\">\n          <h4 className=\"font-weight-bold\">\n            {company.name}\n            <span>\n              {company.logoUrl && (\n                <img\n                  width=\"50px\"\n                  className=\"Company-logo\"\n                  src={company.logoUrl}\n                  alt={company.name}\n                ></img>\n              )}\n            </span>\n          </h4>\n\n          <p>{company.description}</p>\n        </section>\n      </Link>\n    </>\n  );\n};\n\nexport default Company;\n","import React, { useEffect, useState } from \"react\";\nimport Company from \"./Company\";\nimport SearchForm from \"../common/SearchForm\";\nimport JoblyApi from \"../api/JoblyApi\";\nimport { v4 as uuid } from \"uuid\";\nimport \"./Companies.css\";\n\nconst Companies = () => {\n  const [companies, setCompanies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(async () => {\n    const res = await JoblyApi.getAllCompanies();\n    setCompanies(res);\n    setIsLoading(false);\n  }, []);\n\n  async function searchCompany(value) {\n    const res = await JoblyApi.searchCompanyByName(value);\n\n    setCompanies((company) => res);\n  }\n\n  const companiesArray = companies.map((company) => (\n    <div key={uuid()}>\n      <Company company={company} />\n    </div>\n  ));\n\n  if (isLoading) {\n    return <div>Loading ...</div>;\n  }\n\n  return (\n    <div className=\"Companies background\">\n      <div className=\"Companies-group col-md-8 offset-md-2\">\n        <SearchForm search={searchCompany} />\n        <div className=\"Companies-listings m-4\">\n          {companies.length === 0\n            ? \"Sorry, no results were found!\"\n            : companiesArray}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Companies;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport Job from \"../jobs/Job\";\nimport JoblyApi from \"../api/JoblyApi\";\nimport { useParams } from \"react-router-dom\";\nimport { v4 as uuid } from \"uuid\";\nimport \"./Companies.css\";\nimport \"./CompaniesJobs.css\";\nimport UserContext from \"../common/UserContext\";\n\nconst CompaniesJobs = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [jobs, setJobs] = useState([]);\n  const [companyData, setCompanyData] = useState([]);\n  const { companyHandle } = useParams();\n\n  const { currentUser, updateCurrentUser } = useContext(UserContext);\n\n  useEffect(async () => {\n    const res = await JoblyApi.getCompaniesJobs(companyHandle);\n\n    setJobs(res.company.jobs);\n    setCompanyData(res.company);\n    updateCurrentUser();\n\n    setIsLoading(false);\n  }, []);\n\n  const jobsArray = jobs.map((job) => (\n    <div key={uuid()}>\n      <Job job={job} currentUser={currentUser} />\n    </div>\n  ));\n\n  if (isLoading) {\n    return <div>Loading ...</div>;\n  }\n\n  return (\n    <div className=\"CompaniesJobs background\">\n      <div className=\"col-md-8 offset-md-2 \">\n        <div className=\"Company-info m-4\">\n          <h3>{companyData.name}</h3>\n          <p>{companyData.description}</p>\n        </div>\n        <div className=\"CompaniesJobs-listings m-4\">{jobsArray}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default CompaniesJobs;\n","import React from \"react\";\n\nconst Alert = ({ type = \"danger\", messages }) => {\n  const errorMessages = messages.map((err) => (\n    <p className=\"m-0 small\" key={err}>\n      {err}\n    </p>\n  ));\n\n  return (\n    <div className={`alert alert-${type} Login-error`} role=\"alert\">\n      {errorMessages}\n    </div>\n  );\n};\n\nexport default Alert;\n","import React, { useState, useParams } from \"react\";\nimport \"../common/SearchForm.css\";\nimport Alert from \"../helpers/Alert\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  Button,\n  Card,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormText,\n} from \"reactstrap\";\nimport \"./Login.css\";\n\nconst Login = ({ login }) => {\n  const initialData = {\n    username: \"\",\n    password: \"\",\n  };\n  const [formData, setFormData] = useState(initialData);\n  const [formErrors, setFormErrors] = useState(null);\n  const history = useHistory();\n\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData((data) => ({ ...data, [name]: value }));\n  }\n\n  const handleSubmit = async (evt) => {\n    evt.preventDefault();\n    let result = await login(formData);\n    if (result.success) {\n    } else {\n      console.log(result.err);\n      setFormErrors(() => result.err);\n    }\n  };\n\n  return (\n    <div className=\"Login\">\n      <div className=\"Login-block\">\n        <h4 className=\"Login-title\">Log In</h4>\n        <Form className=\"Login-form\" onSubmit={handleSubmit}>\n          <FormGroup>\n            <label htmlFor=\"username\">Username</label>\n            <br />\n            <input\n              className=\"Login-input\"\n              type=\"text\"\n              name=\"username\"\n              id=\"username\"\n              value={FormData.username}\n              onChange={handleChange}\n              required\n            />\n          </FormGroup>\n          <br />\n          <FormGroup>\n            <label htmlFor=\"password\">Password</label>\n            <br />\n            <input\n              className=\"Login-input\"\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              value={FormData.password}\n              onChange={handleChange}\n              required\n            />\n            <br />\n          </FormGroup>\n          {formErrors ? <Alert type=\"danger\" messages={formErrors} /> : null}\n          <Button size=\"sm\" color=\"primary\" className=\"Login-btn\">\n            Submit\n          </Button>\n          <br />\n          <br />\n        </Form>\n      </div>\n    </div>\n  );\n};\nexport default Login;\n","import React, { useState } from \"react\";\nimport \"../common/SearchForm.css\";\nimport { Button, Form, FormGroup } from \"reactstrap\";\nimport \"./SignUp.css\";\nimport Alert from \"../helpers/Alert\";\n\nconst SignUp = ({ signUp }) => {\n  const initialData = {\n    username: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n  };\n\n  const [formData, setFormData] = useState(initialData);\n  const [formErrors, setFormErrors] = useState(null);\n\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData((data) => ({ ...data, [name]: value }));\n  }\n\n  const handleSubmit = async (evt) => {\n    evt.preventDefault();\n    let result = await signUp(formData);\n    if (result.success) {\n    } else {\n      console.log(result.err);\n      setFormErrors(() => result.err);\n    }\n  };\n\n  return (\n    <div className=\"SignUp\">\n      <div className=\"SignUp-block\">\n        <h4 className=\"SignUp-title\">Sign Up</h4>\n        <Form className=\"SignUp-form\" onSubmit={handleSubmit}>\n          <FormGroup>\n            <label htmlFor=\"username\">Username</label>\n            <br />\n            <input\n              className=\"SignUp-input\"\n              type=\"text\"\n              name=\"username\"\n              id=\"username\"\n              value={FormData.username}\n              onChange={handleChange}\n              required\n            />\n            <br />\n          </FormGroup>\n          <FormGroup>\n            <label htmlFor=\"password\">Password</label>\n            <br />\n            <input\n              className=\"SignUp-input\"\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              value={FormData.password}\n              onChange={handleChange}\n              required\n            />\n            <br />\n          </FormGroup>\n          <FormGroup>\n            <label htmlFor=\"firstName\">First Name</label>\n            <br />\n            <input\n              className=\"SignUp-input\"\n              type=\"text\"\n              name=\"firstName\"\n              id=\"firstName\"\n              value={FormData.firstName}\n              onChange={handleChange}\n              required\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <label htmlFor=\"lastName\">Last Name</label>\n            <br />\n            <input\n              className=\"SignUp-input\"\n              type=\"text\"\n              name=\"lastName\"\n              id=\"lastName\"\n              value={FormData.lastName}\n              onChange={handleChange}\n              required\n            />\n          </FormGroup>\n          <FormGroup>\n            <label htmlFor=\"email\">Email</label>\n            <br />\n            <input\n              className=\"SignUp-input\"\n              type=\"text\"\n              name=\"email\"\n              id=\"email\"\n              value={FormData.email}\n              onChange={handleChange}\n              required\n            />\n          </FormGroup>\n          {formErrors ? <Alert type=\"danger\" messages={formErrors} /> : null}\n          <Button size=\"sm\" color=\"primary\" className=\"SignUp-btn\">\n            Submit\n          </Button>\n          <br />\n          <br />\n        </Form>\n      </div>\n    </div>\n  );\n};\nexport default SignUp;\n","import React, { useState, useContext } from \"react\";\nimport \"../common/SearchForm.css\";\nimport UserContext from \"../common/UserContext\";\nimport Alert from \"../helpers/Alert\";\nimport { Button, Form, FormGroup } from \"reactstrap\";\nimport \"./SignUp.css\";\n\nconst Profile = () => {\n  const { currentUser, updateProfile } = useContext(UserContext);\n  const [formErrors, setFormErrors] = useState(null);\n  const initialData = {\n    username: currentUser.username,\n    password: \"\",\n    firstName: currentUser.firstName,\n    lastName: currentUser.lastName,\n    email: currentUser.email,\n  };\n  const [formData, setFormData] = useState(() => initialData);\n  console.log(\"DATA\", formData);\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData((data) => ({ ...data, [name]: value }));\n    console.log(formData);\n  }\n\n  const handleSubmit = async (evt) => {\n    evt.preventDefault();\n    const response = await updateProfile(formData);\n    if (response.success) {\n      console.log(response.success);\n    } else {\n      setFormErrors(response.err);\n      console.log(response.err);\n    }\n  };\n\n  return (\n    <div className=\"SignUp\">\n      <div className=\"SignUp-block\">\n        <h4 className=\"SignUp-title\">User Profile</h4>\n        <Form className=\"SignUp-form\" onSubmit={handleSubmit}>\n          <FormGroup>\n            <label htmlFor=\"username\">Username</label>\n            <br />\n            <div>{formData.username}</div>\n          </FormGroup>\n\n          <FormGroup>\n            <label htmlFor=\"firstName\">First Name</label>\n            <br />\n            <input\n              className=\"SignUp-input\"\n              type=\"text\"\n              name=\"firstName\"\n              id=\"firstName\"\n              placeholder={formData.firstName}\n              value={FormData.firstName}\n              onChange={handleChange}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <label htmlFor=\"lastName\">Last Name</label>\n            <br />\n            <input\n              className=\"SignUp-input\"\n              type=\"text\"\n              name=\"lastName\"\n              id=\"lastName\"\n              placeholder={formData.lastName}\n              value={FormData.lastName}\n              onChange={handleChange}\n            />\n          </FormGroup>\n          <FormGroup>\n            <label htmlFor=\"email\">Email</label>\n            <br />\n            <input\n              className=\"SignUp-input\"\n              type=\"text\"\n              name=\"email\"\n              id=\"email\"\n              placeholder={formData.email}\n              value={FormData.email}\n              onChange={handleChange}\n            />\n          </FormGroup>\n          <FormGroup>\n            <label htmlFor=\"password\">Confirm password to make changes: </label>\n            <br />\n            <input\n              className=\"SignUp-input\"\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              value={FormData.password}\n              onChange={handleChange}\n              required\n            />\n            <br />\n          </FormGroup>\n          {formErrors ? <Alert type=\"danger\" messages={formErrors} /> : null}\n          <Button\n            size=\"sm\"\n            color=\"primary\"\n            text-align=\"center\"\n            className=\"SignUp-btn\"\n          >\n            Save Changes\n          </Button>\n          <br />\n          <br />\n        </Form>\n      </div>\n    </div>\n  );\n};\nexport default Profile;\n","import React from \"react\";\n\nimport { Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ Component }) => {\n  const isAuthenticated = localStorage.getItem(\"token\");\n\n  return isAuthenticated ? (\n    <Component />\n  ) : (\n    <Redirect to={{ pathname: \"/login\" }} />\n  );\n};\n\nexport default ProtectedRoute;\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"./navbar/Navbar\";\nimport { Redirect, Route, Switch, useHistory } from \"react-router-dom\";\nimport Home from \"./home/Home\";\nimport JoblyApi from \"./api/JoblyApi\";\nimport Jobs from \"./jobs/Jobs\";\nimport Companies from \"./companies/Companies\";\nimport CompaniesJobs from \"./companies/CompaniesJobs\";\nimport Login from \"./auth/Login\";\nimport SignUp from \"./auth/SignUp\";\nimport Profile from \"./auth/Profile\";\nimport ProtectedRoute from \"./helpers/ProtectedRoute\";\n\nimport UserContext from \"./common/UserContext\";\nimport jwt from \"jsonwebtoken\";\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [currentToken, setCurrentToken] = useState(\n    getTokenFromLocalStorage() || null\n  );\n  const [isLoading, setIsLoading] = useState(true);\n  const history = useHistory();\n\n  useEffect(async () => {\n    JoblyApi.token = currentToken;\n    await updateCurrentUser();\n    console.log(currentUser);\n    setIsLoading(false);\n  }, [currentToken]);\n\n  async function updateCurrentUser() {\n    try {\n      if (currentToken) {\n        const { username } = jwt.decode(currentToken);\n        const res2 = await JoblyApi.getCurrentUserData(username);\n        setCurrentUser(() => res2);\n        return { success: true };\n      }\n    } catch (err) {\n      console.error(\"Update current user failed\", err);\n      setCurrentUser(null);\n      return { success: false, err };\n    }\n  }\n\n  function addTokenToLocalStorage(token) {\n    localStorage.setItem(\"token\", token);\n  }\n  function getTokenFromLocalStorage() {\n    const res = localStorage.getItem(\"token\");\n\n    return res;\n  }\n\n  async function login({ username, password }) {\n    try {\n      const token = await JoblyApi.getToken(username, password);\n      setCurrentToken(() => token);\n      addTokenToLocalStorage(token);\n      history.push(\"/companies\");\n      return { success: true };\n    } catch (err) {\n      console.error(\"Login Failed\", err);\n      return { success: false, err };\n    }\n  }\n\n  async function logOut() {\n    await JoblyApi.clearToken();\n    setCurrentUser(null);\n    setCurrentToken(null);\n    localStorage.clear();\n    history.push(\"/\");\n  }\n\n  async function signUp(formData) {\n    try {\n      const res = await JoblyApi.registerUser(formData);\n      setCurrentToken(res);\n      addTokenToLocalStorage(res);\n      const res2 = await JoblyApi.getCurrentUserData(formData.username);\n      console.log(\"RES2\", res2);\n\n      setCurrentUser(res2);\n      history.push(\"/companies\");\n      return { success: true };\n    } catch (err) {\n      console.error(\"Sign Up Failed\", err);\n      return { success: false, err };\n    }\n  }\n\n  async function updateProfile(formData) {\n    try {\n      const res = await JoblyApi.updateProfile(formData);\n      setCurrentUser(() => res.user);\n      history.push(\"/\");\n      return { success: true };\n    } catch (err) {\n      console.error(\"Update Profile Failed\", err);\n      return { success: false, err };\n    }\n  }\n\n  async function apply(username, id) {\n    const res = await JoblyApi.apply(username, id);\n\n    return res;\n  }\n\n  if (isLoading) {\n    return <div>Loading ...</div>;\n  }\n  return (\n    <div className=\"App\">\n      <UserContext.Provider\n        value={{ currentUser, apply, updateCurrentUser, updateProfile }}\n      >\n        <Navbar logOut={logOut} />\n        <main>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/companies\">\n              <ProtectedRoute Component={Companies} />\n            </Route>\n            <Route exact path=\"/jobs\">\n              <ProtectedRoute Component={Jobs} />\n            </Route>\n            <Route exact path=\"/companies/:companyHandle\">\n              <ProtectedRoute Component={CompaniesJobs} />\n            </Route>\n            <Route exact path=\"/login\">\n              <Login login={login} />\n            </Route>\n            <Route exact path=\"/signup\">\n              <SignUp signUp={signUp} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <ProtectedRoute Component={Profile} />\n            </Route>\n            <Redirect to=\"/\"></Redirect>\n          </Switch>\n        </main>\n      </UserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}