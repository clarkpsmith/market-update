{"ast":null,"code":"var _jsxFileName = \"/Users/clarksmith/Desktop/Programming/capstone2/react-test-marketupdate/src/chart/Chart.js\";\nimport React, { useState } from \"react\";\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport YahooFinanceApi from \"../api/YahooFinanceApi\";\nimport \"./dark-unica.css\";\n\nconst Chart = ({\n  chartData\n}) => {\n  const [chartInfo, setChartInfo] = useState({\n    \"2y\": chartData\n  });\n  const [clicked, setClicked] = useState(false);\n  const [range, setRange] = useState(\"2y\");\n  const options = {\n    title: {\n      text: \"\",\n      style: {\n        color: \"white\",\n        font: 'bold 16px \"Trebuchet MS\", Verdana, sans-serif'\n      }\n    },\n    tooltip: {\n      style: {\n        color: \"white\"\n      }\n    },\n    rangeSelector: {\n      allButtonsEnabled: true,\n      inputPosition: {\n        color: \"white\"\n      },\n      buttons: [{\n        type: \"day\",\n        count: 1,\n        text: \"Day\",\n        events: {\n          click: async function () {\n            if (!clicked) {\n              setClicked(true);\n\n              if (chartInfo[\"1d\"]) {\n                setRange(\"1d\");\n              } else {\n                const res = await YahooFinanceApi.getChart(chartInfo[\"2y\"].name, \"1d\", \"5m\");\n                setChartInfo(() => ({ ...chartInfo,\n                  \"1d\": res\n                }));\n                setRange(\"1d\");\n              }\n\n              setClicked(false);\n            }\n          }\n        }\n      }, {\n        type: \"day\",\n        count: 5,\n        text: \"5d\",\n        events: {\n          click: async function () {\n            if (!clicked) {\n              setClicked(true);\n\n              if (chartInfo[\"5d\"]) {\n                setRange(\"5d\");\n              } else {\n                const res = await YahooFinanceApi.getChart(chartInfo[\"2y\"].name, \"5d\", \"15m\");\n                setChartInfo(() => ({ ...chartInfo,\n                  \"5d\": res\n                }));\n                setRange(\"5d\");\n              }\n\n              setClicked(false);\n            }\n          }\n        }\n      }, {\n        type: \"month\",\n        count: 1,\n        text: \"1m\",\n        events: {\n          click: async function () {\n            if (!clicked) {\n              setClicked(true);\n\n              if (chartInfo[\"1mo\"]) {\n                setRange(\"1mo\");\n              } else {\n                const res = await YahooFinanceApi.getChart(chartInfo[\"2y\"].name, \"1mo\", \"15m\");\n                setChartInfo(() => ({ ...chartInfo,\n                  \"1mo\": res\n                }));\n                setRange(\"1mo\");\n              }\n\n              setClicked(false);\n            }\n          }\n        }\n      }, {\n        type: \"month\",\n        count: 3,\n        text: \"3m\",\n        events: {\n          click: async function () {\n            setRange(\"2y\");\n          }\n        }\n      }, {\n        type: \"month\",\n        count: 6,\n        text: \"6m\",\n        events: {\n          click: async function () {\n            setRange(\"2y\");\n          }\n        }\n      }, {\n        type: \"ytd\",\n        text: \"YTD\",\n        events: {\n          click: async function () {\n            setRange(\"2y\");\n          }\n        }\n      }, {\n        type: \"year\",\n        count: 1,\n        text: \"1y\",\n        events: {\n          click: async function () {\n            setRange(\"2y\");\n          }\n        }\n      }, {\n        type: \"2y\",\n        text: \"2y\",\n        events: {\n          click: async function () {\n            setRange(\"2y\");\n          }\n        }\n      }, {\n        type: \"5y\",\n        text: \"5y\",\n        events: {\n          click: async function () {\n            if (!clicked) {\n              setClicked(true);\n\n              if (chartInfo[\"5y\"]) {\n                setRange(\"5y\");\n              } else {\n                const res = await YahooFinanceApi.getChart(chartInfo[\"2y\"].name, \"5y\", \"1d\");\n                setChartInfo(() => ({ ...chartInfo,\n                  \"5y\": res\n                }));\n                setRange(\"5y\");\n              }\n\n              setClicked(false);\n            }\n          }\n        }\n      }, {\n        type: \"max\",\n        text: \"Max\",\n        events: {\n          click: async function () {\n            if (!clicked) {\n              setClicked(true);\n\n              if (chartInfo[\"max\"]) {\n                setRange(\"max\");\n              } else {\n                const res = await YahooFinanceApi.getChart(chartInfo[\"2y\"].name, \"max\", \"1mo\");\n                setChartInfo(() => ({ ...chartInfo,\n                  max: res\n                }));\n                setRange(\"max\");\n              }\n\n              setClicked(false);\n            }\n          }\n        }\n      }]\n    },\n    series: [{\n      name: chartInfo[\"2y\"].name,\n      data: chartInfo[range].data\n    }]\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(HighchartsReact, {\n    highcharts: Highcharts,\n    constructorType: \"stockChart\",\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/clarksmith/Desktop/Programming/capstone2/react-test-marketupdate/src/chart/Chart.js"],"names":["React","useState","Highcharts","HighchartsReact","YahooFinanceApi","Chart","chartData","chartInfo","setChartInfo","clicked","setClicked","range","setRange","options","title","text","style","color","font","tooltip","rangeSelector","allButtonsEnabled","inputPosition","buttons","type","count","events","click","res","getChart","name","max","series","data"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport YahooFinanceApi from \"../api/YahooFinanceApi\";\nimport \"./dark-unica.css\";\n\nconst Chart = ({ chartData }) => {\n  const [chartInfo, setChartInfo] = useState({ \"2y\": chartData });\n  const [clicked, setClicked] = useState(false);\n  const [range, setRange] = useState(\"2y\");\n\n  const options = {\n    title: {\n      text: \"\",\n      style: {\n        color: \"white\",\n        font: 'bold 16px \"Trebuchet MS\", Verdana, sans-serif',\n      },\n    },\n    tooltip: {\n      style: {\n        color: \"white\",\n      },\n    },\n    rangeSelector: {\n      allButtonsEnabled: true,\n\n      inputPosition: {\n        color: \"white\",\n      },\n      buttons: [\n        {\n          type: \"day\",\n          count: 1,\n          text: \"Day\",\n          events: {\n            click: async function () {\n              if (!clicked) {\n                setClicked(true);\n                if (chartInfo[\"1d\"]) {\n                  setRange(\"1d\");\n                } else {\n                  const res = await YahooFinanceApi.getChart(\n                    chartInfo[\"2y\"].name,\n                    \"1d\",\n                    \"5m\"\n                  );\n                  setChartInfo(() => ({ ...chartInfo, \"1d\": res }));\n                  setRange(\"1d\");\n                }\n                setClicked(false);\n              }\n            },\n          },\n        },\n        {\n          type: \"day\",\n          count: 5,\n          text: \"5d\",\n          events: {\n            click: async function () {\n              if (!clicked) {\n                setClicked(true);\n                if (chartInfo[\"5d\"]) {\n                  setRange(\"5d\");\n                } else {\n                  const res = await YahooFinanceApi.getChart(\n                    chartInfo[\"2y\"].name,\n                    \"5d\",\n                    \"15m\"\n                  );\n                  setChartInfo(() => ({ ...chartInfo, \"5d\": res }));\n                  setRange(\"5d\");\n                }\n                setClicked(false);\n              }\n            },\n          },\n        },\n        {\n          type: \"month\",\n          count: 1,\n          text: \"1m\",\n          events: {\n            click: async function () {\n              if (!clicked) {\n                setClicked(true);\n                if (chartInfo[\"1mo\"]) {\n                  setRange(\"1mo\");\n                } else {\n                  const res = await YahooFinanceApi.getChart(\n                    chartInfo[\"2y\"].name,\n                    \"1mo\",\n                    \"15m\"\n                  );\n                  setChartInfo(() => ({ ...chartInfo, \"1mo\": res }));\n                  setRange(\"1mo\");\n                }\n                setClicked(false);\n              }\n            },\n          },\n        },\n        {\n          type: \"month\",\n          count: 3,\n          text: \"3m\",\n          events: {\n            click: async function () {\n              setRange(\"2y\");\n            },\n          },\n        },\n        {\n          type: \"month\",\n          count: 6,\n          text: \"6m\",\n          events: {\n            click: async function () {\n              setRange(\"2y\");\n            },\n          },\n        },\n        {\n          type: \"ytd\",\n          text: \"YTD\",\n          events: {\n            click: async function () {\n              setRange(\"2y\");\n            },\n          },\n        },\n        {\n          type: \"year\",\n          count: 1,\n          text: \"1y\",\n          events: {\n            click: async function () {\n              setRange(\"2y\");\n            },\n          },\n        },\n        {\n          type: \"2y\",\n          text: \"2y\",\n          events: {\n            click: async function () {\n              setRange(\"2y\");\n            },\n          },\n        },\n        {\n          type: \"5y\",\n          text: \"5y\",\n          events: {\n            click: async function () {\n              if (!clicked) {\n                setClicked(true);\n                if (chartInfo[\"5y\"]) {\n                  setRange(\"5y\");\n                } else {\n                  const res = await YahooFinanceApi.getChart(\n                    chartInfo[\"2y\"].name,\n                    \"5y\",\n                    \"1d\"\n                  );\n                  setChartInfo(() => ({ ...chartInfo, \"5y\": res }));\n                  setRange(\"5y\");\n                }\n                setClicked(false);\n              }\n            },\n          },\n        },\n        {\n          type: \"max\",\n          text: \"Max\",\n          events: {\n            click: async function () {\n              if (!clicked) {\n                setClicked(true);\n                if (chartInfo[\"max\"]) {\n                  setRange(\"max\");\n                } else {\n                  const res = await YahooFinanceApi.getChart(\n                    chartInfo[\"2y\"].name,\n                    \"max\",\n                    \"1mo\"\n                  );\n\n                  setChartInfo(() => ({ ...chartInfo, max: res }));\n                  setRange(\"max\");\n                }\n                setClicked(false);\n              }\n            },\n          },\n        },\n      ],\n    },\n    series: [\n      {\n        name: chartInfo[\"2y\"].name,\n        data: chartInfo[range].data,\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <HighchartsReact\n        highcharts={Highcharts}\n        constructorType={\"stockChart\"}\n        options={options}\n      />\n    </div>\n  );\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}