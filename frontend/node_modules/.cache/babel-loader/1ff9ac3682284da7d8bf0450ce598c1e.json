{"ast":null,"code":"import { REMOVE_TICKER, ADD_TICKER, UPDATE_CURR_USER, LOG_OUT, SIGN_UP, UPDATE_PROFILE, REFRESH_TICKER, SET_WATCHLIST_DATA, SEARCH_TICKER_DATA } from \"../actions/types\";\nconst DEFAULT_STATE = {\n  currentUser: {},\n  watchlistData: [],\n  searchTickerData: null\n};\n\nfunction rootReducer(state = DEFAULT_STATE, action) {\n  switch (action.type) {\n    case REMOVE_TICKER:\n      return { ...state,\n        currentUser: { ...state.currentUser,\n          watchlist: state.currentUser.watchlist.filter(t => t !== action.ticker.symbol)\n        },\n        watchlistData: state.watchlistData.filter(t => t.symbol !== action.ticker.symbol)\n      };\n\n    case SEARCH_TICKER_DATA:\n      return { ...state,\n        searchTickerData: action.tickerData\n      };\n\n    case ADD_TICKER:\n      return { ...state,\n        currentUser: { ...state.currentUser,\n          watchlist: [...state.currentUser.watchlist, action.ticker.symbol]\n        },\n        watchlistData: [...state.watchlistData, action.ticker]\n      };\n\n    case UPDATE_CURR_USER:\n      return { ...state,\n        currentUser: { ...action.currentUser\n        }\n      };\n\n    case UPDATE_PROFILE:\n      return { ...state,\n        currentUser: { ...action.currentUser\n        }\n      };\n\n    case LOG_OUT:\n      return { ...state,\n        currentUser: {},\n        watchlistData: []\n      };\n\n    case SIGN_UP:\n      return { ...state,\n        currentUser: { ...action.currentUser\n        }\n      };\n\n    case SET_WATCHLIST_DATA:\n      return { ...state,\n        watchlistData: [...action.watchlistData]\n      };\n\n    case REFRESH_TICKER:\n      return { ...state,\n        watchlistData: [...state.watchlistData.map(t => {\n          if (t.symbol === action.ticker.symbol) return action.ticker;else return t;\n        })]\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/clarksmith/Desktop/Programming/capstone2/frontend/src/reducers/rootReducer.js"],"names":["REMOVE_TICKER","ADD_TICKER","UPDATE_CURR_USER","LOG_OUT","SIGN_UP","UPDATE_PROFILE","REFRESH_TICKER","SET_WATCHLIST_DATA","SEARCH_TICKER_DATA","DEFAULT_STATE","currentUser","watchlistData","searchTickerData","rootReducer","state","action","type","watchlist","filter","t","ticker","symbol","tickerData","map"],"mappings":"AAAA,SACEA,aADF,EAEEC,UAFF,EAGEC,gBAHF,EAIEC,OAJF,EAKEC,OALF,EAMEC,cANF,EAOEC,cAPF,EAQEC,kBARF,EASEC,kBATF,QAUO,kBAVP;AAYA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,WAAW,EAAE,EADO;AAEpBC,EAAAA,aAAa,EAAE,EAFK;AAGpBC,EAAAA,gBAAgB,EAAE;AAHE,CAAtB;;AAMA,SAASC,WAAT,CAAqBC,KAAK,GAAGL,aAA7B,EAA4CM,MAA5C,EAAoD;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKhB,aAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELJ,QAAAA,WAAW,EAAE,EACX,GAAGI,KAAK,CAACJ,WADE;AAEXO,UAAAA,SAAS,EAAEH,KAAK,CAACJ,WAAN,CAAkBO,SAAlB,CAA4BC,MAA5B,CACRC,CAAD,IAAOA,CAAC,KAAKJ,MAAM,CAACK,MAAP,CAAcC,MADlB;AAFA,SAFR;AAQLV,QAAAA,aAAa,EAAEG,KAAK,CAACH,aAAN,CAAoBO,MAApB,CACZC,CAAD,IAAOA,CAAC,CAACE,MAAF,KAAaN,MAAM,CAACK,MAAP,CAAcC,MADrB;AARV,OAAP;;AAYF,SAAKb,kBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELF,QAAAA,gBAAgB,EAAEG,MAAM,CAACO;AAFpB,OAAP;;AAKF,SAAKrB,UAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELJ,QAAAA,WAAW,EAAE,EACX,GAAGI,KAAK,CAACJ,WADE;AAEXO,UAAAA,SAAS,EAAE,CAAC,GAAGH,KAAK,CAACJ,WAAN,CAAkBO,SAAtB,EAAiCF,MAAM,CAACK,MAAP,CAAcC,MAA/C;AAFA,SAFR;AAMLV,QAAAA,aAAa,EAAE,CAAC,GAAGG,KAAK,CAACH,aAAV,EAAyBI,MAAM,CAACK,MAAhC;AANV,OAAP;;AASF,SAAKlB,gBAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELJ,QAAAA,WAAW,EAAE,EAAE,GAAGK,MAAM,CAACL;AAAZ;AAFR,OAAP;;AAKF,SAAKL,cAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELJ,QAAAA,WAAW,EAAE,EAAE,GAAGK,MAAM,CAACL;AAAZ;AAFR,OAAP;;AAKF,SAAKP,OAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELJ,QAAAA,WAAW,EAAE,EAFR;AAGLC,QAAAA,aAAa,EAAE;AAHV,OAAP;;AAMF,SAAKP,OAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELJ,QAAAA,WAAW,EAAE,EAAE,GAAGK,MAAM,CAACL;AAAZ;AAFR,OAAP;;AAKF,SAAKH,kBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,aAAa,EAAE,CAAC,GAAGI,MAAM,CAACJ,aAAX;AAFV,OAAP;;AAKF,SAAKL,cAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,aAAa,EAAE,CACb,GAAGG,KAAK,CAACH,aAAN,CAAoBY,GAApB,CAAyBJ,CAAD,IAAO;AAChC,cAAIA,CAAC,CAACE,MAAF,KAAaN,MAAM,CAACK,MAAP,CAAcC,MAA/B,EAAuC,OAAON,MAAM,CAACK,MAAd,CAAvC,KACK,OAAOD,CAAP;AACN,SAHE,CADU;AAFV,OAAP;;AASF;AACE,aAAOL,KAAP;AAxEJ;AA0ED;;AACD,eAAeD,WAAf","sourcesContent":["import {\n  REMOVE_TICKER,\n  ADD_TICKER,\n  UPDATE_CURR_USER,\n  LOG_OUT,\n  SIGN_UP,\n  UPDATE_PROFILE,\n  REFRESH_TICKER,\n  SET_WATCHLIST_DATA,\n  SEARCH_TICKER_DATA,\n} from \"../actions/types\";\n\nconst DEFAULT_STATE = {\n  currentUser: {},\n  watchlistData: [],\n  searchTickerData: null,\n};\n\nfunction rootReducer(state = DEFAULT_STATE, action) {\n  switch (action.type) {\n    case REMOVE_TICKER:\n      return {\n        ...state,\n        currentUser: {\n          ...state.currentUser,\n          watchlist: state.currentUser.watchlist.filter(\n            (t) => t !== action.ticker.symbol\n          ),\n        },\n        watchlistData: state.watchlistData.filter(\n          (t) => t.symbol !== action.ticker.symbol\n        ),\n      };\n    case SEARCH_TICKER_DATA:\n      return {\n        ...state,\n        searchTickerData: action.tickerData,\n      };\n\n    case ADD_TICKER:\n      return {\n        ...state,\n        currentUser: {\n          ...state.currentUser,\n          watchlist: [...state.currentUser.watchlist, action.ticker.symbol],\n        },\n        watchlistData: [...state.watchlistData, action.ticker],\n      };\n\n    case UPDATE_CURR_USER:\n      return {\n        ...state,\n        currentUser: { ...action.currentUser },\n      };\n\n    case UPDATE_PROFILE:\n      return {\n        ...state,\n        currentUser: { ...action.currentUser },\n      };\n\n    case LOG_OUT:\n      return {\n        ...state,\n        currentUser: {},\n        watchlistData: [],\n      };\n\n    case SIGN_UP:\n      return {\n        ...state,\n        currentUser: { ...action.currentUser },\n      };\n\n    case SET_WATCHLIST_DATA:\n      return {\n        ...state,\n        watchlistData: [...action.watchlistData],\n      };\n\n    case REFRESH_TICKER:\n      return {\n        ...state,\n        watchlistData: [\n          ...state.watchlistData.map((t) => {\n            if (t.symbol === action.ticker.symbol) return action.ticker;\n            else return t;\n          }),\n        ],\n      };\n    default:\n      return state;\n  }\n}\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}