{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass MarketUpdateApi {\n  // the token for interactive with the API will be stored here.\n  static async request(endpoint, data = {}, method = \"get\") {\n    // console.debug(\"API Call:\", endpoint, data, method);\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = {\n      Authorization: `Bearer ${MarketUpdateApi.token}`\n    };\n\n    try {\n      if (method === \"get\") {\n        return (await axios.get(url, {\n          headers\n        })).data;\n      }\n\n      if (method === \"post\") {\n        console.log(data);\n        return (await axios.post(url, { ...data,\n          headers\n        })).data;\n      }\n\n      if (method == \"patch\") {\n        return (await axios.patch(url, {\n          data,\n          headers\n        })).data;\n      }\n\n      if (method == \"delete\") {\n        return (await axios.delete(url, {\n          headers\n        })).data;\n      } // return (await axios({ url, method, data, headers })).data;\n\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  } // Individual API routes\n\n\n  static async addTickerToWatchlist(username, ticker) {\n    let res = await this.request(`users/${username}/watchlist/${ticker}`, {}, \"post\");\n    return res;\n  }\n\n  static async removeFromWatchlist(username, ticker) {\n    let res = await this.request(`users/${username}/watchlist/${ticker}`, {}, \"delete\");\n    return res;\n  }\n\n  static async getToken(username, password) {\n    let res = await this.request(`auth/token`, {\n      username,\n      password\n    }, \"post\"); // let res = await axios.post(\"http://localhost:3001/auth/token\", {\n    //   username,\n    //   password,\n    // });\n\n    console.log(\"TOKEN RES\", res);\n    MarketUpdateApi.token = res.token;\n    return res.token;\n  }\n\n  static async registerUser(formData) {\n    let res = await this.request(`auth/register`, { ...formData\n    }, \"post\");\n    MarketUpdateApi.token = res.token;\n    return res.token;\n  }\n\n  static async getCurrentUserData(username) {\n    let res = await this.request(`users/${username}`);\n    console.log(\"RESCURR\", res);\n    return res.user;\n  }\n\n  static async clearToken() {\n    MarketUpdateApi.token = \"\";\n  }\n\n  static async updateProfile(formData) {\n    // check if pasword matches, if not throws error\n    await this.getToken(formData.username, formData.password);\n    const res = await this.request(`users/${formData.username}`, {\n      password: formData.password,\n      firstName: formData.firstName,\n      lastName: formData.lastName,\n      email: formData.email\n    }, \"patch\");\n    return res;\n  }\n\n}\n\nexport default MarketUpdateApi;","map":{"version":3,"sources":["/Users/clarksmith/Desktop/Programming/capstone2/react-test-marketupdate/src/api/MarketUpdateApi.js"],"names":["axios","BASE_URL","process","env","REACT_APP_BASE_URL","MarketUpdateApi","request","endpoint","data","method","url","headers","Authorization","token","get","console","log","post","patch","delete","err","error","response","message","Array","isArray","addTickerToWatchlist","username","ticker","res","removeFromWatchlist","getToken","password","registerUser","formData","getCurrentUserData","user","clearToken","updateProfile","firstName","lastName","email"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass MarketUpdateApi {\n  // the token for interactive with the API will be stored here.\n  static token;\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    // console.debug(\"API Call:\", endpoint, data, method);\n\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${MarketUpdateApi.token}` };\n\n    try {\n      if (method === \"get\") {\n        return (await axios.get(url, { headers })).data;\n      }\n      if (method === \"post\") {\n        console.log(data);\n        return (await axios.post(url, { ...data, headers })).data;\n      }\n      if (method == \"patch\") {\n        return (await axios.patch(url, { data, headers })).data;\n      }\n\n      if (method == \"delete\") {\n        return (await axios.delete(url, { headers })).data;\n      }\n\n      // return (await axios({ url, method, data, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  static async addTickerToWatchlist(username, ticker) {\n    let res = await this.request(\n      `users/${username}/watchlist/${ticker}`,\n      {},\n      \"post\"\n    );\n    return res;\n  }\n  static async removeFromWatchlist(username, ticker) {\n    let res = await this.request(\n      `users/${username}/watchlist/${ticker}`,\n      {},\n      \"delete\"\n    );\n    return res;\n  }\n\n  static async getToken(username, password) {\n    let res = await this.request(`auth/token`, { username, password }, \"post\");\n    // let res = await axios.post(\"http://localhost:3001/auth/token\", {\n    //   username,\n    //   password,\n    // });\n    console.log(\"TOKEN RES\", res);\n    MarketUpdateApi.token = res.token;\n\n    return res.token;\n  }\n\n  static async registerUser(formData) {\n    let res = await this.request(`auth/register`, { ...formData }, \"post\");\n    MarketUpdateApi.token = res.token;\n    return res.token;\n  }\n\n  static async getCurrentUserData(username) {\n    let res = await this.request(`users/${username}`);\n    console.log(\"RESCURR\", res);\n    return res.user;\n  }\n  static async clearToken() {\n    MarketUpdateApi.token = \"\";\n  }\n\n  static async updateProfile(formData) {\n    // check if pasword matches, if not throws error\n    await this.getToken(formData.username, formData.password);\n\n    const res = await this.request(\n      `users/${formData.username}`,\n      {\n        password: formData.password,\n        firstName: formData.firstName,\n        lastName: formData.lastName,\n        email: formData.email,\n      },\n      \"patch\"\n    );\n    return res;\n  }\n}\n\nexport default MarketUpdateApi;\n"]},"metadata":{},"sourceType":"module"}