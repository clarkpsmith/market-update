{"ast":null,"code":"var _jsxFileName = \"/Users/clarksmith/Desktop/Programming/capstone2/react-test-marketupdate/src/watchlist/Item.js\";\nimport React, { useState } from \"react\";\nimport \"../stockinfo/Stockinfo.css\";\nimport { Button } from \"reactstrap\";\nimport { addCommas } from \"../helpers/abreviateLargeNums\";\nimport \"../stockinfo/Stockinfo.css\";\nimport \"./Item.css\";\nimport { removeTickerFromList, addTickerToList } from \"../actions/actionCreators\";\nimport { SEARCH_TICKER_DATA } from \"../actions/types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { refreshTicker } from \"../actions/actionCreators\";\nimport Stockinfo from \"../stockinfo/Stockinfo\";\n\nconst Item = ({\n  ticker\n}) => {\n  const currentUser = useSelector(store => store.currentUser);\n  const dispatch = useDispatch();\n  let alreadyAdded = false;\n  if (Object.keys(currentUser).length) alreadyAdded = currentUser.watchlist.filter(t => t === ticker.symbol);\n  const [expand, setExpand] = useState(false);\n  const [added, setAdded] = useState(alreadyAdded.length !== 0);\n  const [marketChange, setMarketChange] = useState({\n    percent: `${ticker.regularMarketChangePercent.toFixed(2)} %`,\n    market: ticker.regularMarketChange.toFixed(2)\n  });\n  const [percent, setPercent] = useState(true);\n\n  function handleClick() {\n    percent ? setPercent(false) : setPercent(true);\n  }\n\n  function addToWatchlist() {\n    dispatch(addTickerToList(currentUser.username, ticker));\n    dispatch({\n      type: SEARCH_TICKER_DATA,\n      tickerData: null\n    });\n    setAdded(true);\n  }\n\n  async function remove() {\n    dispatch(removeTickerFromList(currentUser.username, ticker));\n  }\n\n  function toggleExpand() {\n    if (!expand) setExpand(true);else setExpand(false);\n  }\n\n  function refresh() {\n    dispatch(refreshTicker(ticker.symbol));\n  }\n\n  let percentColor;\n  marketChange.market >= 0 ? percentColor = \"LimeGreen\" : percentColor = \"red\";\n  const marketPrice = ticker.regularMarketPrice ? addCommas(ticker.regularMarketPrice.toFixed(2)) : \"N/A\";\n\n  if (!expand) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"Item-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      title: \"Expand\",\n      onClick: toggleExpand,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, ticker.symbol), Object.keys(currentUser).length > 0 ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, !added ? /*#__PURE__*/React.createElement(Button, {\n      className: \"Item-btn-watchlist\",\n      onClick: addToWatchlist,\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, \"Add\") : /*#__PURE__*/React.createElement(Button, {\n      className: \"Item-btn-watchlist\",\n      onClick: remove,\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, \"Remove\")) : \"\", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      title: \"Current stock price, click to refresh\",\n      onClick: refresh,\n      className: \"Stockinfo-price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, marketPrice))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Item-fullname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, ticker.longName, \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: handleClick,\n      className: \"Stockinfo-daily-change Item-btn-change\",\n      style: {\n        backgroundColor: percentColor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, percent ? marketChange.percent : marketChange.market))));\n  }\n\n  if (expand) {\n    return /*#__PURE__*/React.createElement(Stockinfo, {\n      ticker: ticker,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 12\n      }\n    });\n  }\n};\n\nexport default Item;","map":{"version":3,"sources":["/Users/clarksmith/Desktop/Programming/capstone2/react-test-marketupdate/src/watchlist/Item.js"],"names":["React","useState","Button","addCommas","removeTickerFromList","addTickerToList","SEARCH_TICKER_DATA","useDispatch","useSelector","refreshTicker","Stockinfo","Item","ticker","currentUser","store","dispatch","alreadyAdded","Object","keys","length","watchlist","filter","t","symbol","expand","setExpand","added","setAdded","marketChange","setMarketChange","percent","regularMarketChangePercent","toFixed","market","regularMarketChange","setPercent","handleClick","addToWatchlist","username","type","tickerData","remove","toggleExpand","refresh","percentColor","marketPrice","regularMarketPrice","longName","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"../stockinfo/Stockinfo.css\";\nimport { Button } from \"reactstrap\";\nimport { addCommas } from \"../helpers/abreviateLargeNums\";\nimport \"../stockinfo/Stockinfo.css\";\nimport \"./Item.css\";\n\nimport {\n  removeTickerFromList,\n  addTickerToList,\n} from \"../actions/actionCreators\";\nimport { SEARCH_TICKER_DATA } from \"../actions/types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { refreshTicker } from \"../actions/actionCreators\";\nimport Stockinfo from \"../stockinfo/Stockinfo\";\n\nconst Item = ({ ticker }) => {\n  const currentUser = useSelector((store) => store.currentUser);\n  const dispatch = useDispatch();\n  let alreadyAdded = false;\n  if (Object.keys(currentUser).length)\n    alreadyAdded = currentUser.watchlist.filter((t) => t === ticker.symbol);\n  const [expand, setExpand] = useState(false);\n  const [added, setAdded] = useState(alreadyAdded.length !== 0);\n  const [marketChange, setMarketChange] = useState({\n    percent: `${ticker.regularMarketChangePercent.toFixed(2)} %`,\n    market: ticker.regularMarketChange.toFixed(2),\n  });\n  const [percent, setPercent] = useState(true);\n\n  function handleClick() {\n    percent ? setPercent(false) : setPercent(true);\n  }\n\n  function addToWatchlist() {\n    dispatch(addTickerToList(currentUser.username, ticker));\n    dispatch({ type: SEARCH_TICKER_DATA, tickerData: null });\n    setAdded(true);\n  }\n\n  async function remove() {\n    dispatch(removeTickerFromList(currentUser.username, ticker));\n  }\n\n  function toggleExpand() {\n    if (!expand) setExpand(true);\n    else setExpand(false);\n  }\n\n  function refresh() {\n    dispatch(refreshTicker(ticker.symbol));\n  }\n\n  let percentColor;\n  marketChange.market >= 0\n    ? (percentColor = \"LimeGreen\")\n    : (percentColor = \"red\");\n  const marketPrice = ticker.regularMarketPrice\n    ? addCommas(ticker.regularMarketPrice.toFixed(2))\n    : \"N/A\";\n\n  if (!expand) {\n    return (\n      <div className=\"Item\">\n        <h4 className=\"Item-title\">\n          <span title=\"Expand\" onClick={toggleExpand}>\n            {ticker.symbol}\n            {/* <span className=\"Item-info-icon\">\n              <FontAwesomeIcon icon={faInfo} />\n            </span> */}\n          </span>\n          {Object.keys(currentUser).length > 0 ? (\n            <span>\n              {!added ? (\n                <Button\n                  className=\"Item-btn-watchlist\"\n                  onClick={addToWatchlist}\n                  size=\"sm\"\n                >\n                  Add\n                </Button>\n              ) : (\n                <Button\n                  className=\"Item-btn-watchlist\"\n                  onClick={remove}\n                  size=\"sm\"\n                >\n                  Remove\n                </Button>\n              )}\n            </span>\n          ) : (\n            \"\"\n          )}\n\n          <span>\n            <span\n              title=\"Current stock price, click to refresh\"\n              onClick={refresh}\n              className=\"Stockinfo-price\"\n            >\n              {marketPrice}\n              {/* <span className=\"Item-info-icon\">\n                <FontAwesomeIcon icon={faInfo} />\n              </span> */}\n            </span>\n          </span>\n        </h4>\n        <div className=\"Item-fullname\">\n          {ticker.longName}{\" \"}\n          <span>\n            <button\n              onClick={handleClick}\n              className=\"Stockinfo-daily-change Item-btn-change\"\n              style={{ backgroundColor: percentColor }}\n            >\n              {percent ? marketChange.percent : marketChange.market}\n            </button>\n          </span>\n        </div>\n      </div>\n    );\n  }\n  if (expand) {\n    return <Stockinfo ticker={ticker} />;\n  }\n};\n\nexport default Item;\n"]},"metadata":{},"sourceType":"module"}