{"ast":null,"code":"var _jsxFileName = \"/Users/clarksmith/Desktop/Programming/capstone2/frontend/src/mktSummary/IndexItem.js\";\nimport React, { useState } from \"react\";\nimport { addCommas } from \"../helpers/abreviateLargeNums\";\nimport Indexinfo from \"./IndexInfo\";\nimport { useDispatch } from \"react-redux\";\nimport { refreshTicker } from \"../actions/actionCreators\";\nimport \"../stockinfo/Stockinfo.css\";\nimport \"../watchlist/Item.css\";\nimport \"./IndexItem.css\";\n\nconst IndexItem = ({\n  ticker\n}) => {\n  const dispatch = useDispatch();\n  const [expand, setExpand] = useState(false);\n  const [marketChange, setMarketChange] = useState({\n    percent: `${ticker.regularMarketChangePercent.toFixed(2)} %`,\n    market: ticker.regularMarketChange.toFixed(2)\n  });\n  const [percent, setPercent] = useState(true);\n\n  function handleClick() {\n    percent ? setPercent(false) : setPercent(true);\n  }\n\n  function refresh() {\n    dispatch(refreshTicker(ticker.symbol));\n  }\n\n  function handleExpand() {\n    if (expand) setExpand(false);else setExpand(true);\n  }\n\n  let percentColor;\n  marketChange.market >= 0 ? percentColor = \"LimeGreen\" : percentColor = \"red\";\n  const marketPrice = ticker.regularMarketPrice ? addCommas(ticker.regularMarketPrice.toFixed(2)) : \"N/A\";\n\n  if (!expand) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"Item-title IndexItem-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      title: \"Expand\",\n      onClick: handleExpand,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, ticker.shortName), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      title: \"Current stock price, click to refresh\",\n      onClick: refresh,\n      className: \"Stockinfo-price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, marketPrice))), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: handleClick,\n      className: \"Stockinfo-daily-change Item-btn-change\",\n      style: {\n        backgroundColor: percentColor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, percent ? marketChange.percent : marketChange.market));\n  }\n\n  if (expand) {\n    return /*#__PURE__*/React.createElement(Indexinfo, {\n      ticker: ticker,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 12\n      }\n    });\n  }\n};\n\nexport default IndexItem;","map":{"version":3,"sources":["/Users/clarksmith/Desktop/Programming/capstone2/frontend/src/mktSummary/IndexItem.js"],"names":["React","useState","addCommas","Indexinfo","useDispatch","refreshTicker","IndexItem","ticker","dispatch","expand","setExpand","marketChange","setMarketChange","percent","regularMarketChangePercent","toFixed","market","regularMarketChange","setPercent","handleClick","refresh","symbol","handleExpand","percentColor","marketPrice","regularMarketPrice","shortName","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,OAAO,4BAAP;AACA,OAAO,uBAAP;AACA,OAAO,iBAAP;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAChC,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC;AAC/CY,IAAAA,OAAO,EAAG,GAAEN,MAAM,CAACO,0BAAP,CAAkCC,OAAlC,CAA0C,CAA1C,CAA6C,IADV;AAE/CC,IAAAA,MAAM,EAAET,MAAM,CAACU,mBAAP,CAA2BF,OAA3B,CAAmC,CAAnC;AAFuC,GAAD,CAAhD;AAIA,QAAM,CAACF,OAAD,EAAUK,UAAV,IAAwBjB,QAAQ,CAAC,IAAD,CAAtC;;AAEA,WAASkB,WAAT,GAAuB;AACrBN,IAAAA,OAAO,GAAGK,UAAU,CAAC,KAAD,CAAb,GAAuBA,UAAU,CAAC,IAAD,CAAxC;AACD;;AAED,WAASE,OAAT,GAAmB;AACjBZ,IAAAA,QAAQ,CAACH,aAAa,CAACE,MAAM,CAACc,MAAR,CAAd,CAAR;AACD;;AAED,WAASC,YAAT,GAAwB;AACtB,QAAIb,MAAJ,EAAYC,SAAS,CAAC,KAAD,CAAT,CAAZ,KACKA,SAAS,CAAC,IAAD,CAAT;AACN;;AAED,MAAIa,YAAJ;AACAZ,EAAAA,YAAY,CAACK,MAAb,IAAuB,CAAvB,GACKO,YAAY,GAAG,WADpB,GAEKA,YAAY,GAAG,KAFpB;AAGA,QAAMC,WAAW,GAAGjB,MAAM,CAACkB,kBAAP,GAChBvB,SAAS,CAACK,MAAM,CAACkB,kBAAP,CAA0BV,OAA1B,CAAkC,CAAlC,CAAD,CADO,GAEhB,KAFJ;;AAIA,MAAI,CAACN,MAAL,EAAa;AACX,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,KAAK,EAAC,QAAZ;AAAqB,MAAA,OAAO,EAAEa,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGf,MAAM,CAACmB,SADV,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,KAAK,EAAC,uCADR;AAEE,MAAA,OAAO,EAAEN,OAFX;AAGE,MAAA,SAAS,EAAC,iBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGI,WALH,CADF,CAJF,CADF,eAeE;AACE,MAAA,OAAO,EAAEL,WADX;AAEE,MAAA,SAAS,EAAC,wCAFZ;AAGE,MAAA,KAAK,EAAE;AAAEQ,QAAAA,eAAe,EAAEJ;AAAnB,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGV,OAAO,GAAGF,YAAY,CAACE,OAAhB,GAA0BF,YAAY,CAACK,MALjD,CAfF,CADF;AAyBD;;AACD,MAAIP,MAAJ,EAAY;AACV,wBAAO,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAEF,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF,CA5DD;;AA8DA,eAAeD,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { addCommas } from \"../helpers/abreviateLargeNums\";\nimport Indexinfo from \"./IndexInfo\";\nimport { useDispatch } from \"react-redux\";\nimport { refreshTicker } from \"../actions/actionCreators\";\nimport \"../stockinfo/Stockinfo.css\";\nimport \"../watchlist/Item.css\";\nimport \"./IndexItem.css\";\n\nconst IndexItem = ({ ticker }) => {\n  const dispatch = useDispatch();\n  const [expand, setExpand] = useState(false);\n  const [marketChange, setMarketChange] = useState({\n    percent: `${ticker.regularMarketChangePercent.toFixed(2)} %`,\n    market: ticker.regularMarketChange.toFixed(2),\n  });\n  const [percent, setPercent] = useState(true);\n\n  function handleClick() {\n    percent ? setPercent(false) : setPercent(true);\n  }\n\n  function refresh() {\n    dispatch(refreshTicker(ticker.symbol));\n  }\n\n  function handleExpand() {\n    if (expand) setExpand(false);\n    else setExpand(true);\n  }\n\n  let percentColor;\n  marketChange.market >= 0\n    ? (percentColor = \"LimeGreen\")\n    : (percentColor = \"red\");\n  const marketPrice = ticker.regularMarketPrice\n    ? addCommas(ticker.regularMarketPrice.toFixed(2))\n    : \"N/A\";\n\n  if (!expand) {\n    return (\n      <div className=\"Item\">\n        <h4 className=\"Item-title IndexItem-title\">\n          <span title=\"Expand\" onClick={handleExpand}>\n            {ticker.shortName}\n          </span>\n          <span>\n            <span\n              title=\"Current stock price, click to refresh\"\n              onClick={refresh}\n              className=\"Stockinfo-price\"\n            >\n              {marketPrice}\n            </span>\n          </span>\n        </h4>\n        <button\n          onClick={handleClick}\n          className=\"Stockinfo-daily-change Item-btn-change\"\n          style={{ backgroundColor: percentColor }}\n        >\n          {percent ? marketChange.percent : marketChange.market}\n        </button>\n      </div>\n    );\n  }\n  if (expand) {\n    return <Indexinfo ticker={ticker} />;\n  }\n};\n\nexport default IndexItem;\n"]},"metadata":{},"sourceType":"module"}