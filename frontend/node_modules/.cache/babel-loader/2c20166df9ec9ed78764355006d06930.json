{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\nclass MarketUpdateApi {\n  // the token for interacting with the API will be stored here.\n  static async request(endpoint, data = {}, method = \"get\") {\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: `Bearer ${MarketUpdateApi.token}`\n    };\n\n    try {\n      if (method === \"get\") {\n        return (await axios.get(url, {\n          headers\n        })).data;\n      }\n\n      if (method === \"post\") {\n        return (await axios.post(url, { ...data\n        }, {\n          headers\n        })).data;\n      }\n\n      if (method === \"patch\") {\n        return (await axios.patch(url, { ...data\n        }, {\n          headers\n        })).data;\n      }\n\n      if (method === \"delete\") {\n        return (await axios.delete(url, {\n          headers\n        })).data;\n      }\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  } // Individual API routes\n\n\n  static async addTickerToWatchlist(username, ticker) {\n    let res = await this.request(`users/${username}/watchlist/${ticker}`, {}, \"post\");\n    return res;\n  }\n\n  static async removeFromWatchlist(username, ticker) {\n    let res = await this.request(`users/${username}/watchlist/${ticker}`, {}, \"delete\");\n    return res;\n  }\n\n  static async getToken(username, password) {\n    let res = await this.request(`auth/token`, {\n      username,\n      password\n    }, \"post\");\n    MarketUpdateApi.token = res.token;\n    return res.token;\n  }\n\n  static async registerUser(formData) {\n    let res = await this.request(`auth/register`, { ...formData\n    }, \"post\");\n    MarketUpdateApi.token = res.token;\n    return res.token;\n  }\n\n  static async getCurrentUserData(username) {\n    let res = await this.request(`users/${username}`);\n    return res.user;\n  }\n\n  static async clearToken() {\n    MarketUpdateApi.token = \"\";\n  }\n\n  static async updateProfile(formData) {\n    const res = await this.request(`users/${formData.username}`, {\n      password: formData.password,\n      firstName: formData.firstName,\n      lastName: formData.lastName,\n      email: formData.email\n    }, \"patch\");\n    return res;\n  }\n\n  static async deleteProfile(username) {\n    const res = await this.request(`users/${username}`, {}, \"delete\");\n    return res;\n  }\n\n}\n\nexport default MarketUpdateApi;","map":{"version":3,"sources":["/Users/clarksmith/Desktop/Programming/capstone2/frontend/src/api/MarketUpdateApi.js"],"names":["axios","BASE_URL","process","env","REACT_APP_BASE_URL","MarketUpdateApi","request","endpoint","data","method","url","headers","Accept","Authorization","token","get","post","patch","delete","err","console","error","response","message","Array","isArray","addTickerToWatchlist","username","ticker","res","removeFromWatchlist","getToken","password","registerUser","formData","getCurrentUserData","user","clearToken","updateProfile","firstName","lastName","email","deleteProfile"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\nclass MarketUpdateApi {\n  // the token for interacting with the API will be stored here.\n  static token;\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: `Bearer ${MarketUpdateApi.token}`,\n    };\n\n    try {\n      if (method === \"get\") {\n        return (await axios.get(url, { headers })).data;\n      }\n      if (method === \"post\") {\n        return (await axios.post(url, { ...data }, { headers })).data;\n      }\n\n      if (method === \"patch\") {\n        return (await axios.patch(url, { ...data }, { headers })).data;\n      }\n\n      if (method === \"delete\") {\n        return (await axios.delete(url, { headers })).data;\n      }\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  static async addTickerToWatchlist(username, ticker) {\n    let res = await this.request(\n      `users/${username}/watchlist/${ticker}`,\n      {},\n      \"post\"\n    );\n    return res;\n  }\n  static async removeFromWatchlist(username, ticker) {\n    let res = await this.request(\n      `users/${username}/watchlist/${ticker}`,\n      {},\n      \"delete\"\n    );\n    return res;\n  }\n\n  static async getToken(username, password) {\n    let res = await this.request(`auth/token`, { username, password }, \"post\");\n    MarketUpdateApi.token = res.token;\n\n    return res.token;\n  }\n\n  static async registerUser(formData) {\n    let res = await this.request(`auth/register`, { ...formData }, \"post\");\n    MarketUpdateApi.token = res.token;\n    return res.token;\n  }\n\n  static async getCurrentUserData(username) {\n    let res = await this.request(`users/${username}`);\n    return res.user;\n  }\n  static async clearToken() {\n    MarketUpdateApi.token = \"\";\n  }\n\n  static async updateProfile(formData) {\n    const res = await this.request(\n      `users/${formData.username}`,\n      {\n        password: formData.password,\n        firstName: formData.firstName,\n        lastName: formData.lastName,\n        email: formData.email,\n      },\n      \"patch\"\n    );\n    return res;\n  }\n\n  static async deleteProfile(username) {\n    const res = await this.request(`users/${username}`, {}, \"delete\");\n    return res;\n  }\n}\n\nexport default MarketUpdateApi;\n"]},"metadata":{},"sourceType":"module"}