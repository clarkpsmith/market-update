{"ast":null,"code":"import { ERROR, ADD_TICKER, REMOVE_TICKER, UPDATE_CURR_USER, REFRESH_TICKER } from \"./types\";\nimport MarketUpdateApi from \"../api/MarketUpdateApi\";\nimport YahooFinanceApi from \"../api/YahooFinanceApi\";\nimport { jwt } from \"jsonwebtoken\";\nexport function addTickerToList(username, ticker) {\n  return async function (dispatch) {\n    try {\n      await MarketUpdateApi.addTickerToWatchlist(username, ticker.symbol);\n      return dispatch(addTicker(ticker));\n    } catch (e) {\n      dispatch(gotError());\n    }\n  };\n}\nexport function refreshTicker(ticker) {\n  return async function (dispatch) {\n    try {\n      const res = await YahooFinanceApi.searchTicker(ticker);\n      return dispatch(updateTickerData(res[0]));\n    } catch (e) {\n      dispatch(gotError());\n    }\n  };\n}\nexport function removeTickerFromList(username, ticker) {\n  return async function (dispatch) {\n    try {\n      await MarketUpdateApi.removeFromWatchlist(username, ticker.symbol);\n      return dispatch(removeTicker(ticker));\n    } catch (e) {\n      dispatch(gotError());\n    }\n  };\n}\nexport function updateCurrUser(currentToken) {\n  return async function (dispatch) {\n    try {\n      if (currentToken) {\n        const {\n          username\n        } = jwt.decode(currentToken);\n        const res2 = await MarketUpdateApi.getCurrentUserData(username);\n        return updatedCurrentUser(res2);\n      }\n    } catch (e) {\n      dispatch(gotError());\n    }\n  };\n}\n\nfunction addTicker(ticker) {\n  return {\n    type: ADD_TICKER,\n    ticker\n  };\n}\n\nfunction removeTicker(ticker) {\n  return {\n    type: REMOVE_TICKER,\n    ticker\n  };\n}\n\nfunction updatedCurrentUser(currentUser) {\n  return {\n    type: UPDATE_CURR_USER,\n    currentUser\n  };\n}\n\nfunction updateTickerData(ticker) {\n  return {\n    type: REFRESH_TICKER,\n    ticker\n  };\n}\n\nfunction gotError() {\n  return {\n    type: ERROR\n  };\n}","map":{"version":3,"sources":["/Users/clarksmith/Desktop/Programming/capstone2/react-test-marketupdate/src/actions/actionCreators.js"],"names":["ERROR","ADD_TICKER","REMOVE_TICKER","UPDATE_CURR_USER","REFRESH_TICKER","MarketUpdateApi","YahooFinanceApi","jwt","addTickerToList","username","ticker","dispatch","addTickerToWatchlist","symbol","addTicker","e","gotError","refreshTicker","res","searchTicker","updateTickerData","removeTickerFromList","removeFromWatchlist","removeTicker","updateCurrUser","currentToken","decode","res2","getCurrentUserData","updatedCurrentUser","type","currentUser"],"mappings":"AAAA,SACEA,KADF,EAEEC,UAFF,EAGEC,aAHF,EAIEC,gBAJF,EAKEC,cALF,QAMO,SANP;AAOA,OAAOC,eAAP,MAA4B,wBAA5B;AACA,OAAOC,eAAP,MAA4B,wBAA5B;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,OAAO,SAASC,eAAT,CAAyBC,QAAzB,EAAmCC,MAAnC,EAA2C;AAChD,SAAO,gBAAgBC,QAAhB,EAA0B;AAC/B,QAAI;AACF,YAAMN,eAAe,CAACO,oBAAhB,CAAqCH,QAArC,EAA+CC,MAAM,CAACG,MAAtD,CAAN;AAEA,aAAOF,QAAQ,CAACG,SAAS,CAACJ,MAAD,CAAV,CAAf;AACD,KAJD,CAIE,OAAOK,CAAP,EAAU;AACVJ,MAAAA,QAAQ,CAACK,QAAQ,EAAT,CAAR;AACD;AACF,GARD;AASD;AAED,OAAO,SAASC,aAAT,CAAuBP,MAAvB,EAA+B;AACpC,SAAO,gBAAgBC,QAAhB,EAA0B;AAC/B,QAAI;AACF,YAAMO,GAAG,GAAG,MAAMZ,eAAe,CAACa,YAAhB,CAA6BT,MAA7B,CAAlB;AAEA,aAAOC,QAAQ,CAACS,gBAAgB,CAACF,GAAG,CAAC,CAAD,CAAJ,CAAjB,CAAf;AACD,KAJD,CAIE,OAAOH,CAAP,EAAU;AACVJ,MAAAA,QAAQ,CAACK,QAAQ,EAAT,CAAR;AACD;AACF,GARD;AASD;AAED,OAAO,SAASK,oBAAT,CAA8BZ,QAA9B,EAAwCC,MAAxC,EAAgD;AACrD,SAAO,gBAAgBC,QAAhB,EAA0B;AAC/B,QAAI;AACF,YAAMN,eAAe,CAACiB,mBAAhB,CAAoCb,QAApC,EAA8CC,MAAM,CAACG,MAArD,CAAN;AAEA,aAAOF,QAAQ,CAACY,YAAY,CAACb,MAAD,CAAb,CAAf;AACD,KAJD,CAIE,OAAOK,CAAP,EAAU;AACVJ,MAAAA,QAAQ,CAACK,QAAQ,EAAT,CAAR;AACD;AACF,GARD;AASD;AACD,OAAO,SAASQ,cAAT,CAAwBC,YAAxB,EAAsC;AAC3C,SAAO,gBAAgBd,QAAhB,EAA0B;AAC/B,QAAI;AACF,UAAIc,YAAJ,EAAkB;AAChB,cAAM;AAAEhB,UAAAA;AAAF,YAAeF,GAAG,CAACmB,MAAJ,CAAWD,YAAX,CAArB;AACA,cAAME,IAAI,GAAG,MAAMtB,eAAe,CAACuB,kBAAhB,CAAmCnB,QAAnC,CAAnB;AACA,eAAOoB,kBAAkB,CAACF,IAAD,CAAzB;AACD;AACF,KAND,CAME,OAAOZ,CAAP,EAAU;AACVJ,MAAAA,QAAQ,CAACK,QAAQ,EAAT,CAAR;AACD;AACF,GAVD;AAWD;;AAED,SAASF,SAAT,CAAmBJ,MAAnB,EAA2B;AACzB,SAAO;AAAEoB,IAAAA,IAAI,EAAE7B,UAAR;AAAoBS,IAAAA;AAApB,GAAP;AACD;;AACD,SAASa,YAAT,CAAsBb,MAAtB,EAA8B;AAC5B,SAAO;AAAEoB,IAAAA,IAAI,EAAE5B,aAAR;AAAuBQ,IAAAA;AAAvB,GAAP;AACD;;AAED,SAASmB,kBAAT,CAA4BE,WAA5B,EAAyC;AACvC,SAAO;AAAED,IAAAA,IAAI,EAAE3B,gBAAR;AAA0B4B,IAAAA;AAA1B,GAAP;AACD;;AACD,SAASX,gBAAT,CAA0BV,MAA1B,EAAkC;AAChC,SAAO;AAAEoB,IAAAA,IAAI,EAAE1B,cAAR;AAAwBM,IAAAA;AAAxB,GAAP;AACD;;AAED,SAASM,QAAT,GAAoB;AAClB,SAAO;AAAEc,IAAAA,IAAI,EAAE9B;AAAR,GAAP;AACD","sourcesContent":["import {\n  ERROR,\n  ADD_TICKER,\n  REMOVE_TICKER,\n  UPDATE_CURR_USER,\n  REFRESH_TICKER,\n} from \"./types\";\nimport MarketUpdateApi from \"../api/MarketUpdateApi\";\nimport YahooFinanceApi from \"../api/YahooFinanceApi\";\nimport { jwt } from \"jsonwebtoken\";\n\nexport function addTickerToList(username, ticker) {\n  return async function (dispatch) {\n    try {\n      await MarketUpdateApi.addTickerToWatchlist(username, ticker.symbol);\n\n      return dispatch(addTicker(ticker));\n    } catch (e) {\n      dispatch(gotError());\n    }\n  };\n}\n\nexport function refreshTicker(ticker) {\n  return async function (dispatch) {\n    try {\n      const res = await YahooFinanceApi.searchTicker(ticker);\n\n      return dispatch(updateTickerData(res[0]));\n    } catch (e) {\n      dispatch(gotError());\n    }\n  };\n}\n\nexport function removeTickerFromList(username, ticker) {\n  return async function (dispatch) {\n    try {\n      await MarketUpdateApi.removeFromWatchlist(username, ticker.symbol);\n\n      return dispatch(removeTicker(ticker));\n    } catch (e) {\n      dispatch(gotError());\n    }\n  };\n}\nexport function updateCurrUser(currentToken) {\n  return async function (dispatch) {\n    try {\n      if (currentToken) {\n        const { username } = jwt.decode(currentToken);\n        const res2 = await MarketUpdateApi.getCurrentUserData(username);\n        return updatedCurrentUser(res2);\n      }\n    } catch (e) {\n      dispatch(gotError());\n    }\n  };\n}\n\nfunction addTicker(ticker) {\n  return { type: ADD_TICKER, ticker };\n}\nfunction removeTicker(ticker) {\n  return { type: REMOVE_TICKER, ticker };\n}\n\nfunction updatedCurrentUser(currentUser) {\n  return { type: UPDATE_CURR_USER, currentUser };\n}\nfunction updateTickerData(ticker) {\n  return { type: REFRESH_TICKER, ticker };\n}\n\nfunction gotError() {\n  return { type: ERROR };\n}\n"]},"metadata":{},"sourceType":"module"}