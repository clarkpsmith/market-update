{"ast":null,"code":"import axios from \"axios\";\nimport { yahooFinanceApiKey } from \"../apiKeys\";\nconst BASE_URL = \"https://apidojo-yahoo-finance-v1.p.rapidapi.com\";\n\nclass YahooFinanceApi {\n  static async request(endpoint, method = \"get\") {\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = {\n      \"x-rapidapi-key\": yahooFinanceApiKey,\n      \"x-rapidapi-host\": `apidojo-yahoo-finance-v1.p.rapidapi.com`\n    };\n\n    try {\n      return await axios.get(url, {\n        headers\n      });\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  static async searchTicker(ticker) {\n    const response = await this.request(`market/v2/get-quotes?region=us&symbols=${ticker}`);\n    return response.data.quoteResponse.result;\n  }\n\n  static async getChart(ticker, range = \"2y\", interval = \"1d\") {\n    const response = await this.request(`market/get-charts?region=us&symbol=${ticker}&interval=${interval}&range=${range}`);\n    const symbol = response.data.chart.result[0].meta.symbol;\n    const {\n      indicators,\n      timestamp\n    } = response.data.chart.result[0];\n    const quotesArray = indicators.quote[0].close;\n\n    function combineArrays(timestampArr, priceArr) {\n      const combinedArray = [];\n\n      for (let i = 0; i < timestampArr.length; i++) {\n        combinedArray.push([timestampArr[i] * 1000, priceArr[i]]);\n      }\n\n      return combinedArray;\n    }\n\n    const data = combineArrays(timestamp, quotesArray);\n    const result = {\n      data,\n      name: symbol,\n      range\n    };\n    return result;\n  }\n\n  static async getStockNews(symbol) {\n    const headers = {\n      \"x-rapidapi-key\": yahooFinanceApiKey,\n      \"x-rapidapi-host\": `yahoo-finance15.p.rapidapi.com`\n    };\n    const response = await axios.get(`https://yahoo-finance15.p.rapidapi.com/api/yahoo/ne/news/${symbol}`, {\n      headers\n    });\n    return response.data.item;\n  }\n\n  static async getStockNewsSummary() {\n    const headers = {\n      \"x-rapidapi-key\": yahooFinanceApiKey,\n      \"x-rapidapi-host\": `yahoo-finance15.p.rapidapi.com`\n    };\n    const response = await axios.get(`https://yahoo-finance15.p.rapidapi.com/api/yahoo/ne/news`, {\n      headers\n    });\n    return response.data;\n  }\n\n  static async getMarketSummary() {\n    const res = await this.request(`market/v2/get-summary`);\n    return res.data.marketSummaryAndSparkResponse.result;\n  }\n\n}\n\nexport default YahooFinanceApi;","map":{"version":3,"sources":["/Users/clarksmith/Desktop/Programming/capstone2/frontend/src/api/YahooFinanceApi.js"],"names":["axios","yahooFinanceApiKey","BASE_URL","YahooFinanceApi","request","endpoint","method","url","headers","get","err","console","error","response","message","Array","isArray","searchTicker","ticker","data","quoteResponse","result","getChart","range","interval","symbol","chart","meta","indicators","timestamp","quotesArray","quote","close","combineArrays","timestampArr","priceArr","combinedArray","i","length","push","name","getStockNews","item","getStockNewsSummary","getMarketSummary","res","marketSummaryAndSparkResponse"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { yahooFinanceApiKey } from \"../apiKeys\";\nconst BASE_URL = \"https://apidojo-yahoo-finance-v1.p.rapidapi.com\";\n\nclass YahooFinanceApi {\n  static async request(endpoint, method = \"get\") {\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = {\n      \"x-rapidapi-key\": yahooFinanceApiKey,\n      \"x-rapidapi-host\": `apidojo-yahoo-finance-v1.p.rapidapi.com`,\n    };\n\n    try {\n      return await axios.get(url, { headers });\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  static async searchTicker(ticker) {\n    const response = await this.request(\n      `market/v2/get-quotes?region=us&symbols=${ticker}`\n    );\n    return response.data.quoteResponse.result;\n  }\n  static async getChart(ticker, range = \"2y\", interval = \"1d\") {\n    const response = await this.request(\n      `market/get-charts?region=us&symbol=${ticker}&interval=${interval}&range=${range}`\n    );\n\n    const symbol = response.data.chart.result[0].meta.symbol;\n    const { indicators, timestamp } = response.data.chart.result[0];\n    const quotesArray = indicators.quote[0].close;\n\n    function combineArrays(timestampArr, priceArr) {\n      const combinedArray = [];\n      for (let i = 0; i < timestampArr.length; i++) {\n        combinedArray.push([timestampArr[i] * 1000, priceArr[i]]);\n      }\n      return combinedArray;\n    }\n    const data = combineArrays(timestamp, quotesArray);\n\n    const result = {\n      data,\n      name: symbol,\n      range,\n    };\n\n    return result;\n  }\n  static async getStockNews(symbol) {\n    const headers = {\n      \"x-rapidapi-key\": yahooFinanceApiKey,\n      \"x-rapidapi-host\": `yahoo-finance15.p.rapidapi.com`,\n    };\n\n    const response = await axios.get(\n      `https://yahoo-finance15.p.rapidapi.com/api/yahoo/ne/news/${symbol}`,\n      { headers }\n    );\n\n    return response.data.item;\n  }\n\n  static async getStockNewsSummary() {\n    const headers = {\n      \"x-rapidapi-key\": yahooFinanceApiKey,\n      \"x-rapidapi-host\": `yahoo-finance15.p.rapidapi.com`,\n    };\n\n    const response = await axios.get(\n      `https://yahoo-finance15.p.rapidapi.com/api/yahoo/ne/news`,\n      { headers }\n    );\n\n    return response.data;\n  }\n\n  static async getMarketSummary() {\n    const res = await this.request(`market/v2/get-summary`);\n\n    return res.data.marketSummaryAndSparkResponse.result;\n  }\n}\n\nexport default YahooFinanceApi;\n"]},"metadata":{},"sourceType":"module"}