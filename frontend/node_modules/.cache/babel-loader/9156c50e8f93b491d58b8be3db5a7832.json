{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass MarketUpdateApi {\n  // the token for interactive with the API will be stored here.\n  static async request(endpoint, data = {}, method = \"get\") {\n    // console.debug(\"API Call:\", endpoint, data, method);\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = {\n      Authorization: `Bearer ${MarketUpdateApi.token}`\n    };\n    const params = method === \"get\" ? data : {};\n\n    try {\n      const res = await axios({\n        url,\n        method,\n        data,\n        params,\n        headers\n      }).data; // console.log(\"RESPONSE\", res);\n\n      return res;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  } // Individual API routes\n\n\n  static async addTickerToWatchlist(username, ticker) {\n    let res = await this.request(`users/${username}/watchlist/${ticker}`, {}, \"post\");\n    return res;\n  }\n\n  static async removeFromWatchlist(username, ticker) {\n    let res = await this.request(`users/${username}/watchlist/${ticker}`, {}, \"delete\");\n    return res;\n  }\n\n  static async getToken(username, password) {\n    let res = await this.request(`auth/token`, {\n      username,\n      password\n    }, \"post\"); // let res = await axios.post(\"http://localhost:3001/auth/token\", {\n    //   username,\n    //   password,\n    // });\n\n    console.log(\"TOKEN RES\", res);\n    MarketUpdateApi.token = res.token;\n    return res.token;\n  }\n\n  static async registerUser(formData) {\n    let res = await this.request(`auth/register`, { ...formData\n    }, \"post\");\n    MarketUpdateApi.token = res.token;\n    return res.token;\n  }\n\n  static async getCurrentUserData(username) {\n    let res = await this.request(`users/${username}`);\n    console.log(\"RESCURR\", res);\n    return res.user;\n  }\n\n  static async clearToken() {\n    MarketUpdateApi.token = \"\";\n  }\n\n  static async apply(username, id) {\n    const res = await this.request(`users/${username}/jobs/${id}`, {}, \"post\");\n    return res;\n  }\n\n  static async updateProfile(formData) {\n    // check if pasword matches, if not throws error\n    await this.getToken(formData.username, formData.password);\n    const res = await this.request(`users/${formData.username}`, {\n      password: formData.password,\n      firstName: formData.firstName,\n      lastName: formData.lastName,\n      email: formData.email\n    }, \"patch\");\n    return res;\n  }\n\n}\n\nexport default MarketUpdateApi;","map":{"version":3,"sources":["/Users/clarksmith/Desktop/Programming/capstone2/react-test-marketupdate/src/api/MarketUpdateApi.js"],"names":["axios","BASE_URL","process","env","REACT_APP_BASE_URL","MarketUpdateApi","request","endpoint","data","method","url","headers","Authorization","token","params","res","err","console","error","response","message","Array","isArray","addTickerToWatchlist","username","ticker","removeFromWatchlist","getToken","password","log","registerUser","formData","getCurrentUserData","user","clearToken","apply","id","updateProfile","firstName","lastName","email"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass MarketUpdateApi {\n  // the token for interactive with the API will be stored here.\n  static token;\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    // console.debug(\"API Call:\", endpoint, data, method);\n\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${MarketUpdateApi.token}` };\n    const params = method === \"get\" ? data : {};\n\n    try {\n      const res = await axios({ url, method, data, params, headers }).data;\n      // console.log(\"RESPONSE\", res);\n      return res;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  static async addTickerToWatchlist(username, ticker) {\n    let res = await this.request(\n      `users/${username}/watchlist/${ticker}`,\n      {},\n      \"post\"\n    );\n    return res;\n  }\n  static async removeFromWatchlist(username, ticker) {\n    let res = await this.request(\n      `users/${username}/watchlist/${ticker}`,\n      {},\n      \"delete\"\n    );\n    return res;\n  }\n\n  static async getToken(username, password) {\n    let res = await this.request(`auth/token`, { username, password }, \"post\");\n    // let res = await axios.post(\"http://localhost:3001/auth/token\", {\n    //   username,\n    //   password,\n    // });\n    console.log(\"TOKEN RES\", res);\n    MarketUpdateApi.token = res.token;\n\n    return res.token;\n  }\n\n  static async registerUser(formData) {\n    let res = await this.request(`auth/register`, { ...formData }, \"post\");\n    MarketUpdateApi.token = res.token;\n    return res.token;\n  }\n\n  static async getCurrentUserData(username) {\n    let res = await this.request(`users/${username}`);\n    console.log(\"RESCURR\", res);\n    return res.user;\n  }\n  static async clearToken() {\n    MarketUpdateApi.token = \"\";\n  }\n\n  static async apply(username, id) {\n    const res = await this.request(`users/${username}/jobs/${id}`, {}, \"post\");\n    return res;\n  }\n\n  static async updateProfile(formData) {\n    // check if pasword matches, if not throws error\n    await this.getToken(formData.username, formData.password);\n\n    const res = await this.request(\n      `users/${formData.username}`,\n      {\n        password: formData.password,\n        firstName: formData.firstName,\n        lastName: formData.lastName,\n        email: formData.email,\n      },\n      \"patch\"\n    );\n    return res;\n  }\n}\n\nexport default MarketUpdateApi;\n"]},"metadata":{},"sourceType":"module"}